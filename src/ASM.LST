Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 1
asm.asm



      1					 ;TITLE	TP Compilador 2016
      2					 include macros2.asm		  ;incluye macros
1     3
1     4
1     5					  ;macros2.asm
1     6					 ;These	are macros for Assembly	Language Programming
1     7					 ;Myron	Berg
1     8					 ;Dickinson State University
1     9					 ;4/5/99
1    10
1    11
1    12					 ;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1    13					 getString		      macro  string	   ;read string	from keyboard
1    14					 local	label1,	label2,	label3,	label4,	label5,	label6,	label7,	label8
1    15
1    16								 pushad
1    17								 push	 di
1    18								 push	 si
1    19
1    20
1    21								 lea	si, string
1    22								 mov	bx, si
1    23
1    24					 label1:		mov    ah, 1
1    25								 int	21h
1    26								 cmp	al, 0Dh
1    27								 je	 label2
1    28
1    29								 cmp	al, 8
1    30								 je	 label8
1    31								 jmp	label7
1    32
1    33					 label8:		dec    si
1    34								 cmp	si, bx
1    35								 jl	 label6
1    36							       jmp    label1
1    37
1    38					 label6:		mov    si, bx
1    39								 jmp	label1
1    40
1    41
1    42					 label7:		mov    [si], al
1    43								 inc	si
1    44								 jmp	label1
1    45					 label2:		mov    byte ptr	[si], '$'
1    46
1    47								 pop	si
1    48								 pop	di
1    49								 popad
1    50
1    51					 endm
1    52
1    53					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1    54					 displayString			macro  string	       ;write string on	screen
1    55
1    56								 push	 dx
1    57								 push	 ax
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 2
asm.asm



1    58
1    59								 lea	dx, string
1    60								 mov	ah, 9
1    61								 int	21h
1    62
1    63								 pop	ax
1    64								 pop	dx
1    65
1    66					 endm
1    67
1    68					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1    69					 scrollup		 macro	    number    ;scroll screen up
1    70
1    71								 pusha
1    72
1    73								 mov	ah, 6	       ;up
1    74								 mov	al, number    ;lines
1    75								 mov	ch, 0	       ;starting at 0,0
1    76								 mov	cl, 0
1    77								 mov	dh, 24	      ;ending at 24, 79
1    78								 mov	dl, 79
1    79								 mov	bh, 15		;black background, white fore
1    80								 int	10h
1    81
1    82								 popa
1    83
1    84					 endm
1    85
1    86					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1    87					 clearScreen		macro
1    88								 scrollup 0
1    89					 endm
1    90
1    91					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1    92					 newLine		macro  number	     ;line feed	and carriage return
1    93					 local	Repeat
1    94
1    95								 pusha
1    96
1    97								 ifnb <number>
1    98								 mov	cx, number
1    99								 endif
1   100
1   101					 Repeat:		mov    al, 0Dh
1   102								 mov	ah, 0Eh
1   103								 int	10h
1   104								 mov	al, 0Ah
1   105								 mov	ah, 0Eh
1   106								 int	10h
1   107
1   108								 ifnb	 <number>
1   109								     loop    Repeat
1   110								 endif
1   111
1   112								 popa
1   113
1   114					 endm
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 3
asm.asm



1   115
1   116					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   117					 getdate		macro  near	       ;get date
1   118
1   119								 mov	ah, 2Ah
1   120								 Int	21h
1   121								 ;AL = day of week (0-7)
1   122								 ;CX = year (1980-2099)
1   123								 ;DL = month (1-12)
1   124								 ;DH = day (1-31)
1   125
1   126
1   127					 endm
1   128					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   129					 gettime		macro  near	       ;get time
1   130
1   131								 mov	ah, 2Ch
1   132								 Int	21h
1   133								 ;AL = hour (0-23)
1   134								 ;CX = minute (0-59)
1   135								 ;DL = second (0-59)
1   136								 ;DH = hundredth (0-99)
1   137
1   138					 endm
1   139
1   140					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   141					 setCurPos		  macro	 row, column	;sets cursor position
1   142
1   143								 mov	dl, row
1   144								 mov	dh, column
1   145								 mov	ah, 2
1   146							       int    10h
1   147
1   148					 endm
1   149
1   150					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   151
1   152					 beep			 macro			  ;beeps speaker
1   153
1   154								 pusha
1   155
1   156								 mov	dl, 7
1   157								 mov	ah, 2
1   158								 int	21h
1   159
1   160								 popa
1   161
1   162								 endm
    163
    164					 include number.asm		  ;incluye el asm para impresion de numeros
1   165
1   166
1   167					  ;number.asm
1   168					 ;These	are macros for use in Assembly Language	Class.
1   169					 ;They are for integer and floating point input	and output.
1   170					 ;They were written by Myron Berg at Dickinson State University
1   171					 ;4/1/99
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 4
asm.asm



1   172
1   173
1   174
1   175
1   176					 extrn atoi:proc, itoa:proc, atof:proc,	ftoa:proc
1   177
1   178					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   179
1   180					 GetInteger		 macro	  number
1   181					 ;gets an integer and stores it	in a double word sized variable
1   182							 lea	bx, number
1   183							 call	 AtoI
1   184
1   185					 endm
1   186
1   187					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   188
1   189					 GetFloat		 macro	number
1   190					 ;gets a floating point	and stores it in a double word sized variable
1   191
1   192							 lea	bx, number
1   193							 call	 atof
1   194					 endm
1   195
1   196					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   197
1   198					 DisplayFloat		   macro  Number, places
1   199					 ;displays a floating point double word	sized variable on the screen
1   200
1   201							 lea	bx, number
1   202							 mov	cx, places
1   203							 call	 ftoa
1   204
1   205					 endm
1   206
1   207					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   208
1   209					 DisplayInteger		   macro  number
1   210					 ;displays an double word sized	variable on the	screen
1   211
1   212							 lea	bx, number
1   213							 call	 itoa
1   214
1   215					 endm
1   216					 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1   217
1   218
1   219
1   220
1   221
1   222
    223
    224	    0000			 .model	small
    225					 .386
    226	00000000			 .stack	200h
*Warning* asm.asm(8) Assuming segment is 32-bit
    227
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 5
asm.asm



    228	    0000			 .data
    229	    0000  2D 2D	20 45 4F 46 20+	 message db	 '-- EOF --', '$'
    230		  2D 2D	24
    231	    000A  4F 76	65 72 66 6C 6F+	 overflow db	 'Overflow!', '$'
    232		  77 21	24
    233	    0014  44 69	76 69 73 69 6F+	 diviz db	 'Division by 0!', '$'
    234		  6E 20	62 79 20 30 21+
    235		  24
    236	    0023  49 6E	67 72 65 73 65+	 read db 'Ingrese valor	por teclado...', '$'
    237		  20 76	61 6C 6F 72 20+
    238		  70 6F	72 20 74 65 63+
    239		  6C 61	64 6F 2E 2E 2E+
    240		  24
    241		  = 001E		 MAX_STRING_LENGTH equ 30 ;Longitud maxima de los string.
    242		  = FFFF		 MAX_STRING_INT	equ 65535 ;Tamaï¿½o maximo de ints.
    243	    0040  ????????		 aux1 dd ?
    244	    0044  ????????		 aux2 dd ?
    245	    0048  000A			 TEN DW	10
    246	    004A  00000000		 cont dd 0.000000
    247	    004E  00000000		 filt dd 0.000000
    248
    249	    0052  ????????		 _IGUALES dd ?
    250
    251	    0056  ????????		 _FILTER dd ?
    252	    005A  ??			 _d db ?
    253
    254	    005B  ????????		 _c dd ?
    255
    256	    005F  ????????		 _b dd ?
    257
    258	    0063  ????????		 _a dd ?
    259	    0067  40A00000		 _cte_5	dd 5.000000
    260	    006B  40400000		 _cte_3	dd 3.000000
    261	    006F  41000000		 _cte_8	dd 8.000000
    262
    263	    0073			 .code
    264	    0000			 main:
    265	    0000  B8 0000s		 mov AX,@DATA ;
    266	    0003  8E D8			 mov DS,AX ;
    267	    0005  9B DB	E3		 finit ;
    268
    269	    0008  D9 06	0067r		 fld _cte_5
    270	    000C  D9 1E	0063r		 fstp _a
    271	    0010  D9 06	006Br		 fld _cte_3
    272	    0014  D9 1E	005Fr		 fstp _b
    273	    0018  D9 06	006Fr		 fld _cte_8
    274	    001C  D9 1E	005Br		 fstp _c
    275	    0020  8B 1E	0063r		 mov bx, _a
**Error** asm.asm(49) Operand types do not match
    276	    0024  FF 16	0000		 call DisplayInteger
**Error** asm.asm(50) Can't use	macro name in expression: DISPLAYINTEGER
    277
    278	    0028  B8 4C00		 mov AX, 4C00h
    279					 end main
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "06/27/16"
??FILENAME			  Text	 "asm	  "
??TIME				  Text	 "22:56:39"
??VERSION			  Number 0201
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0D0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 ASM
@MODEL				  Text	 2
@WORDSIZE			  Text	 2
ATOF				  Near	 ----:---- Extern
ATOI				  Near	 ----:---- Extern
AUX1				  Dword	 DGROUP:0040
AUX2				  Dword	 DGROUP:0044
CONT				  Dword	 DGROUP:004A
DIVIZ				  Byte	 DGROUP:0014
FILT				  Dword	 DGROUP:004E
FTOA				  Near	 ----:---- Extern
ITOA				  Near	 ----:---- Extern
MAIN				  Near	 _TEXT:0000
MAX_STRING_INT			  Number FFFF
MAX_STRING_LENGTH		  Number 001E
MESSAGE				  Byte	 DGROUP:0000
OVERFLOW			  Byte	 DGROUP:000A
READ				  Byte	 DGROUP:0023
TEN				  Word	 DGROUP:0048
_A				  Dword	 DGROUP:0063
_B				  Dword	 DGROUP:005F
_C				  Dword	 DGROUP:005B
_CTE_3				  Dword	 DGROUP:006B
_CTE_5				  Dword	 DGROUP:0067
_CTE_8				  Dword	 DGROUP:006F
_D				  Byte	 DGROUP:005A
_FILTER				  Dword	 DGROUP:0056
_IGUALES			  Dword	 DGROUP:0052

Macro Name

BEEP
CLEARSCREEN
DISPLAYFLOAT
DISPLAYINTEGER
DISPLAYSTRING
GETDATE
GETFLOAT
GETINTEGER
GETSTRING
GETTIME
NEWLINE
SCROLLUP
SETCURPOS
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 7
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  32  0200 Para	  Stack	  STACK
  _DATA				  16  0073 Word	  Public  DATA
_TEXT				  16  002B Word	  Public  CODE
Turbo Assembler	 Version 2.01	     06/27/16 22:56:39	    Page 8
Error Summary



*Warning* asm.asm(8) Assuming segment is 32-bit
**Error** asm.asm(49) Operand types do not match
**Error** asm.asm(50) Can't use	macro name in expression: DISPLAYINTEGER
